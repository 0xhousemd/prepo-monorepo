{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newGlobalDepositCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newAccountDepositCap",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AccountDepositCapChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "hook",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedHooksChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GlobalDepositCapChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAccountDepositCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalDepositAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalDepositCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getNetDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hook",
          "type": "address"
        }
      ],
      "name": "isHookAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recordDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recordWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newAccountDepositCap",
          "type": "uint256"
        }
      ],
      "name": "setAccountDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hook",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newGlobalDepositCap",
          "type": "uint256"
        }
      ],
      "name": "setGlobalDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb87298d23b87a73c9d87cde99d54e16bdcc3c239e9861b377cd6630697082705",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "750509",
    "logsBloom": "0x
    "blockHash": "0x82537c95749c8009a49190cefcc84a0529c6b3a94696940e02c052d1aa885080",
    "transactionHash": "0xb87298d23b87a73c9d87cde99d54e16bdcc3c239e9861b377cd6630697082705",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 4,
        "transactionHash": "0xb87298d23b87a73c9d87cde99d54e16bdcc3c239e9861b377cd6630697082705",
        "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x82537c95749c8009a49190cefcc84a0529c6b3a94696940e02c052d1aa885080"
      }
    ],
    "blockNumber": 4,
    "cumulativeGasUsed": "750509",
    "status": 1,
    "byzantium": true
  },
  "args": ["100000000000000000000000", "1000000000000000000000"],
  "numDeployments": 1,
  "solcInputHash": "2291239b0483a343113106725cbe2c29",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newGlobalDepositCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newAccountDepositCap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AccountDepositCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"AllowedHooksChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GlobalDepositCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAccountDepositCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalDepositCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getNetDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"}],\"name\":\"isHookAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recordDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recordWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAccountDepositCap\",\"type\":\"uint256\"}],\"name\":\"setAccountDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newGlobalDepositCap\",\"type\":\"uint256\"}],\"name\":\"setGlobalDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAccountDepositCap()\":{\"details\":\"An account will not be allowed to deposit if their net deposits exceed `accountDepositCap`.\",\"returns\":{\"_0\":\"The cap on net Base Token deposits per user\"}},\"getGlobalDepositAmount()\":{\"returns\":{\"_0\":\"Net total of Base Token deposited.\"}},\"getGlobalDepositCap()\":{\"details\":\"Deposits are not allowed if `globalDepositAmount` exceeds the `globalDepositCap`.\",\"returns\":{\"_0\":\"Base Token amount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGlobalDepositCap()\":{\"notice\":\"Gets the maximum Base Token amount that is allowed to be deposited (net of withdrawals).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/CollateralDepositRecord.sol\":\"CollateralDepositRecord\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\"},\"contracts/core/CollateralDepositRecord.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\nimport './interfaces/ICollateralDepositRecord.sol';\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\npragma solidity =0.8.7;\\n\\ncontract CollateralDepositRecord is ICollateralDepositRecord, Ownable {\\n  uint256 private _globalDepositCap;\\n  uint256 private _globalDepositAmount;\\n  uint256 private _accountDepositCap;\\n  mapping(address => uint256) private _accountToNetDeposit;\\n  mapping(address => bool) private _allowedHooks;\\n\\n  modifier onlyAllowedHooks() {\\n    require(_allowedHooks[msg.sender], 'Caller not allowed');\\n    _;\\n  }\\n\\n  constructor(uint256 _newGlobalDepositCap, uint256 _newAccountDepositCap) {\\n    _globalDepositCap = _newGlobalDepositCap;\\n    _accountDepositCap = _newAccountDepositCap;\\n  }\\n\\n  function recordDeposit(address _sender, uint256 _amount) external override onlyAllowedHooks {\\n    require(_amount + _globalDepositAmount <= _globalDepositCap, 'Global deposit cap exceeded');\\n    require(\\n      _amount + _accountToNetDeposit[_sender] <= _accountDepositCap,\\n      'Account deposit cap exceeded'\\n    );\\n    _globalDepositAmount += _amount;\\n    _accountToNetDeposit[_sender] += _amount;\\n  }\\n\\n  function recordWithdrawal(address _sender, uint256 _amount) external override onlyAllowedHooks {\\n    if (_globalDepositAmount > _amount) {\\n      _globalDepositAmount -= _amount;\\n    } else {\\n      _globalDepositAmount = 0;\\n    }\\n    if (_accountToNetDeposit[_sender] > _amount) {\\n      _accountToNetDeposit[_sender] -= _amount;\\n    } else {\\n      _accountToNetDeposit[_sender] = 0;\\n    }\\n  }\\n\\n  function setGlobalDepositCap(uint256 _newGlobalDepositCap) external override onlyOwner {\\n    _globalDepositCap = _newGlobalDepositCap;\\n    emit GlobalDepositCapChanged(_globalDepositCap);\\n  }\\n\\n  function setAccountDepositCap(uint256 _newAccountDepositCap) external override onlyOwner {\\n    _accountDepositCap = _newAccountDepositCap;\\n    emit AccountDepositCapChanged(_newAccountDepositCap);\\n  }\\n\\n  function setAllowedHook(address _hook, bool _allowed) external override onlyOwner {\\n    _allowedHooks[_hook] = _allowed;\\n    emit AllowedHooksChanged(_hook, _allowed);\\n  }\\n\\n  function getGlobalDepositCap() external view override returns (uint256) {\\n    return _globalDepositCap;\\n  }\\n\\n  function getGlobalDepositAmount() external view override returns (uint256) {\\n    return _globalDepositAmount;\\n  }\\n\\n  function getAccountDepositCap() external view override returns (uint256) {\\n    return _accountDepositCap;\\n  }\\n\\n  function getNetDeposit(address _account) external view override returns (uint256) {\\n    return _accountToNetDeposit[_account];\\n  }\\n\\n  function isHookAllowed(address _hook) external view override returns (bool) {\\n    return _allowedHooks[_hook];\\n  }\\n}\\n\",\"keccak256\":\"0x3b4d4c066fca259d86168e3a96a0698ba55d66c5c5217446d39462ad93061983\",\"license\":\"UNLICENSED\"},\"contracts/core/interfaces/ICollateralDepositRecord.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity =0.8.7;\\n\\n/// @notice Enforces Collateral deposit caps.\\ninterface ICollateralDepositRecord {\\n  /// @dev Emitted via `setGlobalDepositCap()`.\\n  /// @param amount New global deposit cap\\n  event GlobalDepositCapChanged(uint256 amount);\\n\\n  /// @dev Emitted via `setAccountDepositCap()`.\\n  /// @param amount New account deposit cap\\n  event AccountDepositCapChanged(uint256 amount);\\n\\n  /// @dev Emitted via `setAllowedHook()`.\\n  /// @param hook Hook with changed permissions\\n  /// @param allowed Whether the hook is allowed\\n  event AllowedHooksChanged(address hook, bool allowed);\\n\\n  /**\\n   * @dev This function will be called by a Collateral hook before the fee\\n   * is subtracted from the initial `amount` passed in.\\n   *\\n   * Only callable by allowed hooks.\\n   *\\n   * Reverts if the incoming deposit brings either total over their\\n   * respective caps.\\n   *\\n   * `finalAmount` is added to both the global and account-specific\\n   * deposit totals.\\n   * @param sender The account making the Collateral deposit\\n   * @param finalAmount The amount actually deposited by the user\\n   */\\n  function recordDeposit(address sender, uint256 finalAmount) external;\\n\\n  /**\\n   * @notice Called by a Collateral hook before the fee is subtracted from\\n   * the amount withdrawn from the Strategy.\\n   * @dev `finalAmount` is subtracted from both the global and\\n   * account-specific deposit totals.\\n   *\\n   * Only callable by allowed hooks.\\n   * @param sender The account making the Collateral withdrawal\\n   * @param finalAmount The amount actually withdrawn by the user\\n   */\\n  function recordWithdrawal(address sender, uint256 finalAmount) external;\\n\\n  /**\\n   * @notice Sets the global cap on assets backing Collateral in circulation.\\n   * @dev Only callable by owner().\\n   * @param newGlobalDepositCap The new global deposit cap\\n   */\\n  function setGlobalDepositCap(uint256 newGlobalDepositCap) external;\\n\\n  /**\\n   * @notice Sets the cap on net Base Token deposits per user.\\n   * @dev Only callable by owner().\\n   * @param newAccountDepositCap The new account deposit cap\\n   */\\n  function setAccountDepositCap(uint256 newAccountDepositCap) external;\\n\\n  /**\\n   * @notice Sets if a contract is allowed to record deposits\\n   * and withdrawals.\\n   * @dev Only callable by owner().\\n   * @param hook The contract address\\n   * @param allowed Whether or not the contract will be allowed\\n   */\\n  function setAllowedHook(address hook, bool allowed) external;\\n\\n  /**\\n   * @notice Gets the maximum Base Token amount that is allowed to be\\n   * deposited (net of withdrawals).\\n   * @dev Deposits are not allowed if `globalDepositAmount` exceeds\\n   * the `globalDepositCap`.\\n   * @return Base Token amount\\n   */\\n  function getGlobalDepositCap() external view returns (uint256);\\n\\n  /// @return Net total of Base Token deposited.\\n  function getGlobalDepositAmount() external view returns (uint256);\\n\\n  /**\\n   * @dev An account will not be allowed to deposit if their net deposits\\n   * exceed `accountDepositCap`.\\n   * @return The cap on net Base Token deposits per user\\n   */\\n  function getAccountDepositCap() external view returns (uint256);\\n\\n  /**\\n   * @param account The account to retrieve net deposits for\\n   * @return The net total amount of Base Token deposited by a user\\n   */\\n  function getNetDeposit(address account) external view returns (uint256);\\n\\n  /**\\n   * @notice Returns whether the contract is allowed to record deposits and\\n   * withdrawals.\\n   * @param hook The contract to retrieve allowed status for\\n   * @return Whether the contract is allowed\\n   */\\n  function isHookAllowed(address hook) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xeaa812a5715bae639199dbd9f853083c2c91b069d67e71925c147bcde309cf8c\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c31380380610c3183398101604081905261002f91610096565b61003833610046565b6001919091556003556100ba565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100a957600080fd5b505080516020909101519092909150565b610b68806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063ccb12bde11610066578063ccb12bde146101b0578063ee357444146101f9578063f2fde38b1461020c578063fa17bb751461021f57600080fd5b80638da5cb5b1461016d57806393f52c8514610195578063b3858a98146101a857600080fd5b806332fc07b4116100bd57806332fc07b414610155578063715018a61461015d5780637abf1d761461016557600080fd5b80630c99bbd1146100e45780631b905aea146100f95780631e578bae14610142575b600080fd5b6100f76100f2366004610abb565b610232565b005b61012f610107366004610a33565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b6040519081526020015b60405180910390f35b6100f7610150366004610a91565b6102f4565b60035461012f565b6100f76104d5565b60025461012f565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610139565b6100f76101a3366004610abb565b610562565b60015461012f565b6101e96101be366004610a33565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b6040519015158152602001610139565b6100f7610207366004610a55565b610618565b6100f761021a366004610a33565b610727565b6100f761022d366004610a91565b610857565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60038190556040518181527fd7ae35ba7d196ed3a0d7303e6300e0d9457d63a8d8b93728a1ca1cde14bbd175906020015b60405180910390a150565b3360009081526005602052604090205460ff1661036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616c6c6572206e6f7420616c6c6f776564000000000000000000000000000060448201526064016102af565b60015460025461037d9083610ad4565b11156103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f476c6f62616c206465706f73697420636170206578636565646564000000000060448201526064016102af565b60035473ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260409020546104189083610ad4565b1115610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4163636f756e74206465706f736974206361702065786365656465640000000060448201526064016102af565b80600260008282546104929190610ad4565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812080548392906104cc908490610ad4565b90915550505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b6105606000610995565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b60018190556040518181527f959b4684feaa0e36db1208206eb91af0b278e7beb2056b22f1b39e3fb50f22b9906020016102e9565b60005473ffffffffffffffffffffffffffffffffffffffff163314610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f6b86468637b2f87cd5fc78216769ddeb8375e2c857e1f0a68a91a2d1ef85be1a910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b73ffffffffffffffffffffffffffffffffffffffff811661084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102af565b61085481610995565b50565b3360009081526005602052604090205460ff166108d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616c6c6572206e6f7420616c6c6f776564000000000000000000000000000060448201526064016102af565b8060025411156108f75780600260008282546108ec9190610aec565b909155506108fd9050565b60006002555b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205481101561096a5773ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260408120805483929061095f908490610aec565b909155506109919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260408120555b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a2e57600080fd5b919050565b600060208284031215610a4557600080fd5b610a4e82610a0a565b9392505050565b60008060408385031215610a6857600080fd5b610a7183610a0a565b915060208301358015158114610a8657600080fd5b809150509250929050565b60008060408385031215610aa457600080fd5b610aad83610a0a565b946020939093013593505050565b600060208284031215610acd57600080fd5b5035919050565b60008219821115610ae757610ae7610b03565b500190565b600082821015610afe57610afe610b03565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220ebe848eab54728ea5680588c6df1cf46d32bcf5add28acbd26e296b9a4b2b13d64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063ccb12bde11610066578063ccb12bde146101b0578063ee357444146101f9578063f2fde38b1461020c578063fa17bb751461021f57600080fd5b80638da5cb5b1461016d57806393f52c8514610195578063b3858a98146101a857600080fd5b806332fc07b4116100bd57806332fc07b414610155578063715018a61461015d5780637abf1d761461016557600080fd5b80630c99bbd1146100e45780631b905aea146100f95780631e578bae14610142575b600080fd5b6100f76100f2366004610abb565b610232565b005b61012f610107366004610a33565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b6040519081526020015b60405180910390f35b6100f7610150366004610a91565b6102f4565b60035461012f565b6100f76104d5565b60025461012f565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610139565b6100f76101a3366004610abb565b610562565b60015461012f565b6101e96101be366004610a33565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b6040519015158152602001610139565b6100f7610207366004610a55565b610618565b6100f761021a366004610a33565b610727565b6100f761022d366004610a91565b610857565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60038190556040518181527fd7ae35ba7d196ed3a0d7303e6300e0d9457d63a8d8b93728a1ca1cde14bbd175906020015b60405180910390a150565b3360009081526005602052604090205460ff1661036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616c6c6572206e6f7420616c6c6f776564000000000000000000000000000060448201526064016102af565b60015460025461037d9083610ad4565b11156103e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f476c6f62616c206465706f73697420636170206578636565646564000000000060448201526064016102af565b60035473ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260409020546104189083610ad4565b1115610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4163636f756e74206465706f736974206361702065786365656465640000000060448201526064016102af565b80600260008282546104929190610ad4565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812080548392906104cc908490610ad4565b90915550505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b6105606000610995565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b60018190556040518181527f959b4684feaa0e36db1208206eb91af0b278e7beb2056b22f1b39e3fb50f22b9906020016102e9565b60005473ffffffffffffffffffffffffffffffffffffffff163314610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b73ffffffffffffffffffffffffffffffffffffffff821660008181526005602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f6b86468637b2f87cd5fc78216769ddeb8375e2c857e1f0a68a91a2d1ef85be1a910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102af565b73ffffffffffffffffffffffffffffffffffffffff811661084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102af565b61085481610995565b50565b3360009081526005602052604090205460ff166108d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f43616c6c6572206e6f7420616c6c6f776564000000000000000000000000000060448201526064016102af565b8060025411156108f75780600260008282546108ec9190610aec565b909155506108fd9050565b60006002555b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205481101561096a5773ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260408120805483929061095f908490610aec565b909155506109919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600460205260408120555b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a2e57600080fd5b919050565b600060208284031215610a4557600080fd5b610a4e82610a0a565b9392505050565b60008060408385031215610a6857600080fd5b610a7183610a0a565b915060208301358015158114610a8657600080fd5b809150509250929050565b60008060408385031215610aa457600080fd5b610aad83610a0a565b946020939093013593505050565b600060208284031215610acd57600080fd5b5035919050565b60008219821115610ae757610ae7610b03565b500190565b600082821015610afe57610afe610b03565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220ebe848eab54728ea5680588c6df1cf46d32bcf5add28acbd26e296b9a4b2b13d64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAccountDepositCap()": {
        "details": "An account will not be allowed to deposit if their net deposits exceed `accountDepositCap`.",
        "returns": {
          "_0": "The cap on net Base Token deposits per user"
        }
      },
      "getGlobalDepositAmount()": {
        "returns": {
          "_0": "Net total of Base Token deposited."
        }
      },
      "getGlobalDepositCap()": {
        "details": "Deposits are not allowed if `globalDepositAmount` exceeds the `globalDepositCap`.",
        "returns": {
          "_0": "Base Token amount"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getGlobalDepositCap()": {
        "notice": "Gets the maximum Base Token amount that is allowed to be deposited (net of withdrawals)."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1537,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4175,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_globalDepositCap",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4177,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_globalDepositAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4179,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_accountDepositCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4183,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_accountToNetDeposit",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4187,
        "contract": "contracts/core/CollateralDepositRecord.sol:CollateralDepositRecord",
        "label": "_allowedHooks",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
